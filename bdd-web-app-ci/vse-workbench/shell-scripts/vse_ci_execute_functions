#
#
# function definitions to source into vse_ci_execute
#
#set -x

##### usage: exitus <exit code> [<optional log text for stderr>]

exitus()
   {
      typeset rc=$1
      shift
      while [ $# -gt 0 ]
         do
            echo "$1" >&2
            shift
         done
      exit ${rc}
   }
   

kill_tomcat(){
   ID=`echo ${1}|cut -c 8-9`
   echo "killing appserver tomcat from user ${INSTUSER} with ssh ${INSTUSER}@${DEPLOYHOST}"
   # should check wether tomcat or jboss matches
   ssh ${INSTUSER}@${DEPLOYHOST} ./bin/tomcat stopclean

   PID=`ssh ${INSTUSER}@${DEPLOYHOST} "ps aux | grep tomcat | grep ${ID} | grep -v grep | awk '{print$2}' " `
   if [ -z $PID ]
    then
       echo "Tomcat is not running"
    else
       echo "Tomcat is running with PID=${PID}"
       ssh ${INSTUSER}@${DEPLOYHOST} "kill -9 ${PID}"
       sleep 5
       echo "Tomcat killed"
   fi

}

are_all_wars_depoyed() {
    for entry in "/home/gnrlwas_3/tomcat/webapps"/*.war
    do
      if [[ ! -d "${entry%.war}" ]]; then

        return 1
      fi
    done
    return 0
}

start_tomcat(){
  ssh ${INSTUSER}@${DEPLOYHOST} ./bin/tomcat start
  echo "Tomcat start command sent ... waiting for tomcat startup: "
    i=1
    while :
    do
         result=`ssh ${INSTUSER}@${DEPLOYHOST} grep -F "Server" /home/${INSTUSER}/tomcat/log/catalina.out | grep startup`
         if [[ $result == *"Server startup"* ]];
         then
           echo "$result"
           break
         else
           i=`expr $i + 1`
           if [ $i -le 36 ]; then
              # echo "tomcat is starting: $i"
              sleep 5
           else
              echo "DEPLOYMENT_ERROR: tomcat not successfully started...after 3 minutes"
              break
           fi
         fi
    done
    echo "Deployment finished"
}

check_and_create_directory(){
  CHECKDIR=${1}
  if (ssh ${INSTUSER}@${DEPLOYHOST} [ ! -d "~/tomcat/${CHECKDIR}" ] )
  then
    echo "${CHECKDIR} does not exist. Create it"
    ssh ${INSTUSER}@${DEPLOYHOST}  "mkdir -p ~/tomcat/${CHECKDIR}"
  fi
}
